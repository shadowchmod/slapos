{% macro replicate(namebase, nbbackup, typeexport, typeimport) %}

[resilient-mdb]
config-bully = true
config-script = bully.py
config-wrapper = bully
config-namebase = {{namebase}}

[request-{{namebase}}]
<= resilient-mdb
   slap-connection
software-type = {{typeexport}}
name = {{namebase}}0
return = url ssh-public-key ssh-url notification-id ip

config = number bully script wrapper
         authorized-key notify ip-list namebase

config-authorized-key = $${request-pull-backup-server:connection-ssh-key}
config-notify = $${request-pull-backup-server:connection-notification-url}

config-ip-list = 0
config-number=0

{% for id in range(1,nbbackup|int) %}

[request-{{namebase}}-pseudo-replicating-{{id}}]
<= slap-connection
   resilient-mdb
recipe = slapos.cookbook:request
name = {{namebase}}{{id}}

software-url = $${slap-connection:software-release-url}
software-type = {{typeimport}}
return = url ssh-public-key ssh-url notification-url ip

config = number bully script wrapper
         authorized-key on-notification ip-list namebase

config-authorized-key = $${request-pull-backup-server:connection-ssh-key}
config-on-notification = $${request-pull-backup-server:connection-feeds-url}$${:pbs-notification-id}
pbs-notification-id = $${slap-connection:computer-id}-$${slap-connection:partition-id}-{{namebase}}-push

config-ip-list = 0
config-number = {{id}}

{% endfor %}

[iplist]
config-ip-list = $${request-{{namebase}}:connection-ip}
                 {% for j in range(1,nbbackup|int) %}
                 $${request-{{namebase}}-pseudo-replicating-{{j}}:connection-ip}
                 {% endfor %}

[request-{{namebase}}-2]
<= resilient-mdb
   slap-connection
   iplist

recipe = slapos.cookbook:request
name = {{namebase}}0

config = number bully script wrapper
         authorized-key notify ip-list namebase

software-url = $${slap-connection:software-release-url}
software-type = {{typeexport}}
return = url ssh-public-key ssh-url notification-id ip

config-authorized-key = $${request-pull-backup-server:connection-ssh-key}
config-notify = $${request-pull-backup-server:connection-notification-url}

config-number=0

{% for id in range(1,nbbackup|int) %}
[request-{{namebase}}-pseudo-replicating-{{id}}-2]
<= slap-connection
   resilient-mdb
   iplist

recipe = slapos.cookbook:request
name = {{namebase}}{{id}}

software-url = $${slap-connection:software-release-url}
software-type = {{typeimport}}
return = url ssh-public-key ssh-url notification-url

config = number bully script wrapper
         authorized-key on-notification ip-list namebase

config-authorized-key = $${request-pull-backup-server:connection-ssh-key}
config-on-notification = $${request-pull-backup-server:connection-feeds-url}$${:pbs-notification-id}
pbs-notification-id = $${slap-connection:computer-id}-$${slap-connection:partition-id}-{{namebase}}-push


config-number = {{id}}
{% endfor %}

[request-pull-backup-server-{{namebase}}]
<= request-pull-backup-server
   slap-connection
name = PBS pulling from $${request-{{namebase}}:name}
config = url name type server-key on-notification notify notification-id title
config-url = $${request-{{namebase}}:connection-ssh-url}
config-name = $${slap-connection:computer-id}-$${slap-connection:partition-id}-{{namebase}}
config-type = pull
config-server-key = $${request-{{namebase}}:connection-ssh-public-key}
config-on-notification = $${request-{{namebase}}:connection-notification-id}
config-notify = $${request-pull-backup-server:connection-notification-url}
config-notification-id = $${slap-connection:computer-id}-$${slap-connection:partition-id}-{{namebase}}-pull
config-title = Pulling from {{namebase}}
slave = true

{% for id in range(1,nbbackup|int) %}
[request-pull-backup-server-{{namebase}}-backup-{{id}}]
<= request-pull-backup-server
   slap-connection
name = PBS pushing on $${request-{{namebase}}-pseudo-replicating-{{id}}:name}
config = url name type server-key on-notification notify notification-id title
config-url = $${request-{{namebase}}-pseudo-replicating-{{id}}:connection-ssh-url}
config-name = $${request-pull-backup-server-{{namebase}}:config-name}
config-type = push
config-server-key = $${request-{{namebase}}-pseudo-replicating-{{id}}:connection-ssh-public-key}
config-on-notification = $${request-pull-backup-server:connection-feeds-url}$${request-pull-backup-server-mariadb:config-notification-id}
config-notify = $${request-{{namebase}}-pseudo-replicating-{{id}}:connection-notification-url}
config-notification-id = $${request-{{namebase}}-pseudo-replicating-{{id}}:pbs-notification-id}
config-title = Pushing to {{namebase}} backup {{id}}
slave = true
{% endfor %}

{% endmacro %}